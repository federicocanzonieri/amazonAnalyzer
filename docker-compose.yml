version: "3.7"
services:
    python:
        build:
            context: ./python
            dockerfile: Dockerfile
        image: am:python
        container_name: python_AM
        networks:
            tap:
                ipv4_address: ${IP_PYTHON_AMAZON}
        environment:
            CODE_PRODUCT: B093T7GQWB
            PYTHON_APP: amazonScraper.py
            HOST_LOGSTASH: ${IP_LOGSTASH}
            PORT_LOGSTASH: ${PORT_LOGSTASH}
            TIMEOUT_BEFORE_LOGSTASH: 100
            TIMEOUT_FETCH_ANOTHER_PAGE: 5
            DEBUG: "no"
            START_PAGE: 0
            END_PAGE: 6
        
    logstash:
        build:
            context: ./logstash
            dockerfile: Dockerfile
        image: am:logstash
        container_name: logstash_AM
        networks:
            tap:
                ipv4_address: ${IP_LOGSTASH}
        volumes:
            - $PWD/logstash/pipeline/:/usr/share/logstash/pipeline/
        ports:
            - ${PORT_LOGSTASH}:${PORT_LOGSTASH}
        environment:
            TCP_PORT: ${PORT_LOGSTASH}
            TOPIC: ${TOPIC}
        depends_on:
            - kafka_server
    zookeeper:
        build:
            context: ./kafka
            dockerfile: Dockerfile
        image: am:zookeeper
        container_name: zookeeper_AM
        networks: 
            tap:
                ipv4_address: ${IP_ZOOKEEPER}
        ports:
            - ${PORT_ZOOKEEPER}:${PORT_ZOOKEEPER}
        environment: 
            KAFKA_ACTION: start-zk
    
    kafka_server:
        build:
            context: ./kafka
            dockerfile: Dockerfile
        image: am:kafka_server
        container_name: kafka_server_AM
        networks: 
            tap:
                ipv4_address: ${IP_KAFKA_SERVER}
        ports:
            - ${PORT_KAFKA_SERVER}:${PORT_KAFKA_SERVER}
        environment: 
            KAFKA_ACTION: start-kafka
        depends_on: 
            - zookeeper
    
    spark:
        build:
            context: ./spark
            dockerfile: Dockerfile
        image: am:spark
        container_name: spark_AM
        networks:
            tap:
                ipv4_address: ${IP_SPARK}
        environment:
            SPARK_ACTION: "spark-submit-python"
            HOST_ELASTIC: ${IP_ELASTIC} 
            PORT_ELASTIC: ${PORT_ELASTIC_1}
            TOPIC: ${TOPIC}
            TIMEOUT_BEFORE_START_SPARK: 60
            INDEX: ${INDEX}
            #TAP_CODE: app.py
        command: ["./bin/spark-submit --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.1.1,org.elasticsearch:elasticsearch-spark-30_2.12:7.12.1  /opt/tap/app.py"]
        #command: ["python","/opt/tap/app.py", "--packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.1.1,org.elasticsearch:elasticsearch-spark-30_2.12:7.12.1"]
        depends_on:
            - kafka_server
            - logstash
            - zookeeper
            - elastic_search
    

    webui:
        image: provectuslabs/kafka-ui:latest
        container_name: kafkaWebUI_AM
        environment:
            - KAFKA_CLUSTERS_0_NAME=local
            - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=${IP_KAFKA_SERVER}:${PORT_KAFKA_SERVER}
        ports: 
            - ${PORT_WEBUI}:${PORT_WEBUI}
        networks: 
            - tap
        depends_on:
            - kafka_server
    
    elastic_search:
        build:
            context: ./elastic
            dockerfile: Dockerfile
        image: am:elastic_search
        container_name: elastic_search_AM
        networks: 
            tap:
                ipv4_address: ${IP_ELASTIC}
        ports:
            - ${PORT_ELASTIC_1}:${PORT_ELASTIC_1}
            - ${PORT_ELASTIC_2}:${PORT_ELASTIC_2}
        environment:
            discovery.type: single-node
            ES_JAVA_OPTS: -Xms4g -Xmx4g
            
    
    kibana:
        build:
            context: ./kibana
            dockerfile: Dockerfile
        image: am:kibana
        container_name: kibana_AM
        networks: 
            tap:
                ipv4_address: ${IP_KIBANA}
        ports:
            - ${PORT_KIBANA}:${PORT_KIBANA}
            

networks: 
    tap:
        name: tap
        driver: bridge
        ipam:
            config:
                - subnet: 10.0.100.1/24
    
  


        